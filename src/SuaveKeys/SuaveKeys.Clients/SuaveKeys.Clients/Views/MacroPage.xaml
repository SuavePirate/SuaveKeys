<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:SuaveKeys.Clients.Views"
             mc:Ignorable="d"
             x:Class="SuaveKeys.Clients.Views.MacroPage"
             Title="{Binding CurrentProfile.Name}">
    <ContentPage.Content>
        <StackLayout Orientation="Horizontal">
            <CollectionView ItemsSource="{Binding Macros}" SelectedItem="{Binding CurrentMacro, Mode=TwoWay}" SelectionMode="Single" WidthRequest="400">
                <CollectionView.Header>
                    <Button Text="Create new macro" Command="{Binding CreateMacroCommand}"/>
                </CollectionView.Header>
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <Label Text="{Binding Phrase}"/>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            <ScrollView>
                <StackLayout Padding="32">
                    <Label Text="{Binding CurrentMacro.Phrase}"/>

                    <StackLayout x:Name="EventsList" BindableLayout.ItemsSource="{Binding CurrentEvents}" WidthRequest="600">
                        <BindableLayout.ItemTemplate>
                            <DataTemplate>
                                <StackLayout Margin="16">
                                    <Label Text="{Binding DisplayName}" Margin="8"/>
                                    <Label Text="Key to press" IsVisible="{Binding IsKey}"/>
                                    <Entry Text="{Binding Key}" IsVisible="{Binding IsKey}" Placeholder="Key"/>

                                    <Label Text="Hold Time (in milliseconds)" IsVisible="{Binding IsKey}"/>
                                    <Entry Text="{Binding HoldTimeMilliseconds}" IsVisible="{Binding IsKey}" Keyboard="Numeric" Placeholder="Hold time"/>

                                    <Label Text="Hold Time (in milliseconds)" IsVisible="{Binding IsPause}"/>
                                    <Entry Text="{Binding HoldTimeMilliseconds}" IsVisible="{Binding IsPause}" Keyboard="Numeric" Placeholder="Hold time"/>

                                    <Label Text="Phrase to be typed" IsVisible="{Binding IsType}"/>
                                    <Entry Text="{Binding TypedPhrase}" IsVisible="{Binding IsType}" Placeholder="Typed phrase"/>

                                    <StackLayout Orientation="Horizontal">
                                        <Button Command="{Binding BindingContext.MoveEventUpCommand, Source={x:Reference EventsList}}" CommandParameter="{Binding .}" Text="Move Up"/>
                                        <Button Command="{Binding BindingContext.MoveEventDownCommand, Source={x:Reference EventsList}}" CommandParameter="{Binding .}" Text="Move Down"/>
                                        <Button Command="{Binding BindingContext.RemoveEventCommand, Source={x:Reference EventsList}}" CommandParameter="{Binding .}" Text="Remove"/>
                                    </StackLayout>
                                </StackLayout>
                            </DataTemplate>
                        </BindableLayout.ItemTemplate>
                    </StackLayout>
                    <StackLayout IsVisible="{Binding HasCurrentMacro}">
                        <Label Text="Add a new event. Select the event type, then click/tap 'Add Event'"/>
                        <Picker SelectedItem="{Binding SelectedNewEventType}" ItemDisplayBinding="{Binding .}">
                            <Picker.ItemsSource>
                                <x:Array Type="{x:Type x:String}">
                                    <x:String>Key</x:String>
                                    <x:String>Pause</x:String>
                                    <x:String>Type</x:String>
                                </x:Array>
                            </Picker.ItemsSource>
                        </Picker>
                        <Button Text="Add Event" Command="{Binding CreateMacroEventCommand}"/>
                    </StackLayout>

                    <Button Text="Save Macro" Command="{Binding SaveProfileCommand}" HorizontalOptions="CenterAndExpand"/>
                </StackLayout>
            </ScrollView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>